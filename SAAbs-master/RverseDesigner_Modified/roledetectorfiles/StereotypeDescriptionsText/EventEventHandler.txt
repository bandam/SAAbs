OverviewPackageClassUseTreeDeprecatedIndexHelp Javaâ„¢ Platform
Standard Ed. 7 Prev PackageNext PackageFramesNo FramesAll Classes
Package java.awt.event
Provides interfaces and classes for dealing with different types of events fired by AWT components.
See: Description

Interface Summary 
Interface	Description
ActionListener	
The listener interface for receiving action events.
AdjustmentListener	
The listener interface for receiving adjustment events.
AWTEventListener	
The listener interface for receiving notification of events dispatched to objects that are instances of Component or MenuComponent or their subclasses.
ComponentListener	
The listener interface for receiving component events.
ContainerListener	
The listener interface for receiving container events.
FocusListener	
The listener interface for receiving keyboard focus events on a component.
HierarchyBoundsListener	
The listener interface for receiving ancestor moved and resized events.
HierarchyListener	
The listener interface for receiving hierarchy changed events.
InputMethodListener	
The listener interface for receiving input method events.
ItemListener	
The listener interface for receiving item events.
KeyListener	
The listener interface for receiving keyboard events (keystrokes).
MouseListener	
The listener interface for receiving "interesting" mouse events (press, release, click, enter, and exit) on a component.
MouseMotionListener	
The listener interface for receiving mouse motion events on a component.
MouseWheelListener	
The listener interface for receiving mouse wheel events on a component.
TextListener	
The listener interface for receiving text events.
WindowFocusListener	
The listener interface for receiving WindowEvents, including WINDOW_GAINED_FOCUS and WINDOW_LOST_FOCUS events.
WindowListener	
The listener interface for receiving window events.
WindowStateListener	
The listener interface for receiving window state events.
Class Summary 
Class	Description
ActionEvent	
A semantic event which indicates that a component-defined action occurred.
AdjustmentEvent	
The adjustment event emitted by Adjustable objects like Scrollbar and ScrollPane.
AWTEventListenerProxy	
A class which extends the EventListenerProxy specifically for adding an AWTEventListener for a specific event mask.
ComponentAdapter	
An abstract adapter class for receiving component events.
ComponentEvent	
A low-level event which indicates that a component moved, changed size, or changed visibility (also, the root class for the other component-level events).
ContainerAdapter	
An abstract adapter class for receiving container events.
ContainerEvent	
A low-level event which indicates that a container's contents changed because a component was added or removed.
FocusAdapter	
An abstract adapter class for receiving keyboard focus events.
FocusEvent	
A low-level event which indicates that a Component has gained or lost the input focus.
HierarchyBoundsAdapter	
An abstract adapter class for receiving ancestor moved and resized events.
HierarchyEvent	
An event which indicates a change to the Component hierarchy to which Component belongs.
InputEvent	
The root event class for all component-level input events.
InputMethodEvent	
Input method events contain information about text that is being composed using an input method.
InvocationEvent	
An event which executes the run() method on a Runnable when dispatched by the AWT event dispatcher thread.
ItemEvent	
A semantic event which indicates that an item was selected or deselected.
KeyAdapter	
An abstract adapter class for receiving keyboard events.
KeyEvent	
An event which indicates that a keystroke occurred in a component.
MouseAdapter	
An abstract adapter class for receiving mouse events.
MouseEvent	
An event which indicates that a mouse action occurred in a component.
MouseMotionAdapter	
An abstract adapter class for receiving mouse motion events.
MouseWheelEvent	
An event which indicates that the mouse wheel was rotated in a component.
PaintEvent	
The component-level paint event.
TextEvent	
A semantic event which indicates that an object's text changed.
WindowAdapter	
An abstract adapter class for receiving window events.
WindowEvent	
A low-level event that indicates that a window has changed its status.
Package java.awt.event Description

Provides interfaces and classes for dealing with different types of events fired by AWT components. See the java.awt.AWTEvent class for details on the AWT event model. Events are fired by event sources. An event listener registers with an event source to receive notifications about the events of a particular type. This package defines events and event listeners, as well as event listener adapters, which are convenience classes to make easier the process of writing event listeners.

Package javax.naming.event
Provides support for event notification when accessing naming and directory services.
See: Description

Interface Summary 
Interface	Description
EventContext	
Contains methods for registering/deregistering listeners to be notified of events fired when objects named in a context changes.
EventDirContext	
Contains methods for registering listeners to be notified of events fired when objects named in a directory context changes.
NamespaceChangeListener	
Specifies the methods that a listener interested in namespace changes must implement.
NamingListener	
This interface is the root of listener interfaces that handle NamingEvents.
ObjectChangeListener	
Specifies the method that a listener of a NamingEvent with event type of OBJECT_CHANGED must implement.
Class Summary 
Class	Description
NamingEvent	
This class represents an event fired by a naming/directory service.
NamingExceptionEvent	
This class represents an event fired when the procedures/processes used to collect information for notifying listeners of NamingEvents threw a NamingException.
Package javax.naming.event Description

Provides support for event notification when accessing naming and directory services.
This package defines the event notification operations of the Java Naming and Directory InterfaceTM (JNDI).   JNDI provides naming and directory functionality to applications written in the Java programming language. It is designed to be independent of any specific naming or directory service implementation. Thus a variety of services--new, emerging, and already deployed ones--can be accessed in a common way.

Naming Events

This package defines a NamingEvent class to represent an event that is generated by a naming/directory service. It also defines subinterfaces of Context and DirContext, called EventContext and EventDirContext, through which applications can register their interest in events fired by the context.

NamingEvent represents an event that occurs in a naming or directory service. There are two categories of naming events:

Those that affect the namespace (add/remove/rename an object)
Those that affect the objects' contents.
Each category of events is handled by a corresponding listener: NamespaceChangeListener, ObjectChangeListener.
An application, for example, can register its interest in changes to objects in a context as follows:

EventContext src = 
    (EventContext)(new InitialContext()).lookup("o=wiz,c=us");
src.addNamingListener("ou=users", EventContext.ONELEVEL_SCOPE,
    new ChangeHandler());
...
class ChangeHandler implements ObjectChangeListener {
    public void objectChanged(NamingEvent evt) {
        System.out.println(evt.getNewBinding());
    }
    public void namingExceptionThrown(NamingExceptionEvent evt) {
        System.out.println(evt.getException());
    }
}
Threading Issues

When an event is dispatched to a listener, the listener method (such as objectChanged()) may be executed in a thread other than the one in which the call to addNamingListener() was executed. The choice of which thread to use is made by the service provider. When an event is dispatched to multiple listeners, the service provider may choose (and is generally encouraged) to execute the listener methods concurrently in separate threads.
When a listener instance invokes NamingEvent.getEventContext(), it must take into account the possibility that other threads will be working with that context concurrently. Likewise, when a listener is registered via addNamingListener(), the registering thread must take into account the likely possibility that the service provider will later invoke the listeners in newly-created threads. As Context instances are not guaranteed to be thread-safe in general, all context operations must be synchronized as needed.

Exception Handling

When a listener registers for events with a context, the context might need to do some internal processing in order to collect information required to generate the events. The context, for example, might need to make a request to the server to register interest in changes on the server that will eventually be translated into events. If an exception occurs that prevents information about the events from being collected, the listener will never be notified of the events. When such an exception occurs, a NamingExceptionEvent is fired to notify the listener. The listener's namingExceptionThrown() method is invoked, as shown in the sample code above, and the listener is automatically deregistered.
Package Specification

The JNDI API Specification and related documents can be found in the JNDI documentation.
Since:

Class EventObject

java.lang.Object
java.util.EventObject
All Implemented Interfaces:
Serializable
Direct Known Subclasses:
AWTEvent, BeanContextEvent, CaretEvent, ChangeEvent, ConnectionEvent, DragGestureEvent, DragSourceEvent, DropTargetEvent, FlavorEvent, HandshakeCompletedEvent, HyperlinkEvent, LineEvent, ListDataEvent, ListSelectionEvent, MenuEvent, NamingEvent, NamingExceptionEvent, NodeChangeEvent, Notification, PopupMenuEvent, PreferenceChangeEvent, PrintEvent, PropertyChangeEvent, RowSetEvent, RowSorterEvent, SSLSessionBindingEvent, StatementEvent, TableColumnModelEvent, TableModelEvent, TreeExpansionEvent, TreeModelEvent, TreeSelectionEvent, UndoableEditEvent, UnsolicitedNotificationEvent

public class EventObject
extends Object
implements Serializable
The root class from which all event state objects shall be derived.

All Events are constructed with a reference to the object, the "source", that is logically deemed to be the object upon which the Event in question initially occurred upon.

OverviewPackageClassUseTreeDeprecatedIndexHelp Javaâ„¢ Platform
Standard Ed. 7 Prev ClassNext ClassFramesNo FramesAll ClassesSummary: Nested | Field | Constr | MethodDetail: Field | Constr | Method
java.util
Interface EventListener

All Known Subinterfaces:
Action, ActionListener, AdjustmentListener, AncestorListener, AWTEventListener, BeanContextMembershipListener, BeanContextServiceRevokedListener, BeanContextServices, BeanContextServicesListener, CaretListener, CellEditorListener, ChangeListener, ComponentListener, ConnectionEventListener, ContainerListener, ControllerEventListener, DocumentListener, DragGestureListener, DragSourceListener, DragSourceMotionListener, DropTargetListener, FlavorListener, FocusListener, HandshakeCompletedListener, HierarchyBoundsListener, HierarchyListener, HyperlinkListener, IIOReadProgressListener, IIOReadUpdateListener, IIOReadWarningListener, IIOWriteProgressListener, IIOWriteWarningListener, InputMethodListener, InternalFrameListener, ItemListener, KeyListener, LineListener, ListDataListener, ListSelectionListener, MenuDragMouseListener, MenuKeyListener, MenuListener, MetaEventListener, MouseInputListener, MouseListener, MouseMotionListener, MouseWheelListener, NamespaceChangeListener, NamingListener, NodeChangeListener, NotificationListener, ObjectChangeListener, PopupMenuListener, PreferenceChangeListener, PropertyChangeListener, RowSetListener, RowSorterListener, SSLSessionBindingListener, StatementEventListener, TableColumnModelListener, TableModelListener, TextListener, TreeExpansionListener, TreeModelListener, TreeSelectionListener, TreeWillExpandListener, UndoableEditListener, UnsolicitedNotificationListener, VetoableChangeListener, WindowFocusListener, WindowListener, WindowStateListener
All Known Implementing Classes:
AbstractAction, AbstractButton.ButtonChangeListener, AWTEventListenerProxy, AWTEventMulticaster, BasicButtonListener, BasicColorChooserUI.PropertyHandler, BasicComboBoxEditor, BasicComboBoxEditor.UIResource, BasicComboBoxUI.FocusHandler, BasicComboBoxUI.ItemHandler, BasicComboBoxUI.KeyHandler, BasicComboBoxUI.ListDataHandler, BasicComboBoxUI.PropertyChangeHandler, BasicComboPopup.InvocationKeyHandler, BasicComboPopup.InvocationMouseHandler, BasicComboPopup.InvocationMouseMotionHandler, BasicComboPopup.ItemHandler, BasicComboPopup.ListDataHandler, BasicComboPopup.ListMouseHandler, BasicComboPopup.ListMouseMotionHandler, BasicComboPopup.ListSelectionHandler, BasicComboPopup.PropertyChangeHandler, BasicDesktopIconUI.MouseInputHandler, BasicDesktopPaneUI.CloseAction, BasicDesktopPaneUI.MaximizeAction, BasicDesktopPaneUI.MinimizeAction, BasicDesktopPaneUI.NavigateAction, BasicDesktopPaneUI.OpenAction, BasicDirectoryModel, BasicFileChooserUI.ApproveSelectionAction, BasicFileChooserUI.CancelSelectionAction, BasicFileChooserUI.ChangeToParentDirectoryAction, BasicFileChooserUI.DoubleClickListener, BasicFileChooserUI.GoHomeAction, BasicFileChooserUI.NewFolderAction, BasicFileChooserUI.SelectionListener, BasicFileChooserUI.UpdateAction, BasicInternalFrameTitlePane.CloseAction, BasicInternalFrameTitlePane.IconifyAction, BasicInternalFrameTitlePane.MaximizeAction, BasicInternalFrameTitlePane.MoveAction, BasicInternalFrameTitlePane.PropertyChangeHandler, BasicInternalFrameTitlePane.RestoreAction, BasicInternalFrameTitlePane.SizeAction, BasicInternalFrameUI.BasicInternalFrameListener, BasicInternalFrameUI.BorderListener, BasicInternalFrameUI.ComponentHandler, BasicInternalFrameUI.GlassPaneDispatcher, BasicInternalFrameUI.InternalFramePropertyChangeListener, BasicLabelUI, BasicListUI.FocusHandler, BasicListUI.ListDataHandler, BasicListUI.ListSelectionHandler, BasicListUI.MouseInputHandler, BasicListUI.PropertyChangeHandler, BasicMenuItemUI.MouseInputHandler, BasicMenuUI.ChangeHandler, BasicMenuUI.MouseInputHandler, BasicOptionPaneUI.ButtonActionListener, BasicOptionPaneUI.PropertyChangeHandler, BasicProgressBarUI.ChangeHandler, BasicRootPaneUI, BasicScrollBarUI.ArrowButtonListener, BasicScrollBarUI.ModelListener, BasicScrollBarUI.PropertyChangeHandler, BasicScrollBarUI.ScrollListener, BasicScrollBarUI.TrackListener, BasicScrollPaneUI.HSBChangeListener, BasicScrollPaneUI.MouseWheelHandler, BasicScrollPaneUI.PropertyChangeHandler, BasicScrollPaneUI.ViewportChangeHandler, BasicScrollPaneUI.VSBChangeListener, BasicSliderUI.ActionScroller, BasicSliderUI.ChangeHandler, BasicSliderUI.ComponentHandler, BasicSliderUI.FocusHandler, BasicSliderUI.PropertyChangeHandler, BasicSliderUI.ScrollListener, BasicSliderUI.TrackListener, BasicSplitPaneDivider, BasicSplitPaneDivider.MouseHandler, BasicSplitPaneUI.FocusHandler, BasicSplitPaneUI.KeyboardDownRightHandler, BasicSplitPaneUI.KeyboardEndHandler, BasicSplitPaneUI.KeyboardHomeHandler, BasicSplitPaneUI.KeyboardResizeToggleHandler, BasicSplitPaneUI.KeyboardUpLeftHandler, BasicSplitPaneUI.PropertyHandler, BasicTabbedPaneUI.FocusHandler, BasicTabbedPaneUI.MouseHandler, BasicTabbedPaneUI.PropertyChangeHandler, BasicTabbedPaneUI.TabSelectionHandler, BasicTableHeaderUI.MouseInputHandler, BasicTableUI.FocusHandler, BasicTableUI.KeyHandler, BasicTableUI.MouseInputHandler, BasicTextUI.BasicCaret, BasicToolBarUI.DockingListener, BasicToolBarUI.FrameListener, BasicToolBarUI.PropertyListener, BasicToolBarUI.ToolBarContListener, BasicToolBarUI.ToolBarFocusListener, BasicTreeUI.CellEditorHandler, BasicTreeUI.ComponentHandler, BasicTreeUI.FocusHandler, BasicTreeUI.KeyHandler, BasicTreeUI.MouseHandler, BasicTreeUI.MouseInputHandler, BasicTreeUI.PropertyChangeHandler, BasicTreeUI.SelectionModelPropertyChangeHandler, BasicTreeUI.TreeCancelEditingAction, BasicTreeUI.TreeExpansionHandler, BasicTreeUI.TreeHomeAction, BasicTreeUI.TreeIncrementAction, BasicTreeUI.TreeModelHandler, BasicTreeUI.TreePageAction, BasicTreeUI.TreeSelectionHandler, BasicTreeUI.TreeToggleAction, BasicTreeUI.TreeTraverseAction, BeanContextChildSupport, BeanContextServicesSupport, BeanContextServicesSupport.BCSSProxyServiceProvider, BeanContextSupport, Checkbox.AccessibleAWTCheckbox, Component.AccessibleAWTComponent.AccessibleAWTComponentHandler, Component.AccessibleAWTComponent.AccessibleAWTFocusHandler, ComponentAdapter, Container.AccessibleAWTContainer.AccessibleContainerHandler, ContainerAdapter, DefaultCaret, DefaultCellEditor.EditorDelegate, DefaultEditorKit.BeepAction, DefaultEditorKit.CopyAction, DefaultEditorKit.CutAction, DefaultEditorKit.DefaultKeyTypedAction, DefaultEditorKit.InsertBreakAction, DefaultEditorKit.InsertContentAction, DefaultEditorKit.InsertTabAction, DefaultEditorKit.PasteAction, DefaultTableColumnModel, DefaultTreeCellEditor, DragSourceAdapter, DragSourceContext, DropTarget, DropTarget.DropTargetAutoScroller, DropTargetAdapter, EventListenerProxy, FocusAdapter, FormView, FormView.MouseEventListener, HierarchyBoundsAdapter, HTMLEditorKit.HTMLTextAction, HTMLEditorKit.InsertHTMLTextAction, HTMLEditorKit.LinkController, InternalFrameAdapter, JCheckBox.AccessibleJCheckBox, JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem, JComboBox, JComponent.AccessibleJComponent.AccessibleContainerHandler, JComponent.AccessibleJComponent.AccessibleFocusHandler, JEditorPane.AccessibleJEditorPane, JEditorPane.AccessibleJEditorPaneHTML, JEditorPane.JEditorPaneAccessibleHypertextSupport, JLayer, JList.AccessibleJList, JMenu.AccessibleJMenu, JMenu.WinListener, JMenuItem.AccessibleJMenuItem, JPasswordField.AccessibleJPasswordField, JPopupMenu.AccessibleJPopupMenu, JRadioButton.AccessibleJRadioButton, JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem, JScrollPane.AccessibleJScrollPane, JSpinner.AccessibleJSpinner, JSpinner.DateEditor, JSpinner.DefaultEditor, JSpinner.ListEditor, JSpinner.NumberEditor, JTabbedPane.AccessibleJTabbedPane, JTabbedPane.ModelListener, JTable, JTable.AccessibleJTable, JTableHeader, JTextArea.AccessibleJTextArea, JTextComponent.AccessibleJTextComponent, JTextField.AccessibleJTextField, JToggleButton.AccessibleJToggleButton, JTree.AccessibleJTree, JTree.TreeModelHandler, JTree.TreeSelectionRedirector, JViewport.ViewListener, KeyAdapter, List.AccessibleAWTList, MetalComboBoxEditor, MetalComboBoxEditor.UIResource, MetalComboBoxUI.MetalPropertyChangeListener, MetalFileChooserUI.DirectoryComboBoxAction, MetalFileChooserUI.FilterComboBoxModel, MetalFileChooserUI.SingleClickListener, MetalLabelUI, MetalRootPaneUI, MetalSliderUI.MetalPropertyListener, MetalToolBarUI.MetalContainerListener, MetalToolBarUI.MetalDockingListener, MetalToolBarUI.MetalRolloverListener, MouseAdapter, MouseDragGestureRecognizer, MouseInputAdapter, MouseMotionAdapter, ProgressMonitor.AccessibleProgressMonitor, PropertyChangeListenerProxy, RelationService, StyledEditorKit.AlignmentAction, StyledEditorKit.BoldAction, StyledEditorKit.FontFamilyAction, StyledEditorKit.FontSizeAction, StyledEditorKit.ForegroundAction, StyledEditorKit.ItalicAction, StyledEditorKit.StyledTextAction, StyledEditorKit.UnderlineAction, SynthButtonUI, SynthCheckBoxMenuItemUI, SynthCheckBoxUI, SynthColorChooserUI, SynthComboBoxUI, SynthDesktopIconUI, SynthDesktopPaneUI, SynthInternalFrameUI, SynthLabelUI, SynthListUI, SynthMenuBarUI, SynthMenuItemUI, SynthMenuUI, SynthOptionPaneUI, SynthPanelUI, SynthPopupMenuUI, SynthProgressBarUI, SynthRadioButtonMenuItemUI, SynthRadioButtonUI, SynthRootPaneUI, SynthScrollBarUI, SynthScrollPaneUI, SynthSeparatorUI, SynthSliderUI, SynthSpinnerUI, SynthSplitPaneUI, SynthTabbedPaneUI, SynthTableHeaderUI, SynthTableUI, SynthToggleButtonUI, SynthToolBarUI, SynthToolTipUI, SynthTreeUI, SynthViewportUI, TextAction, TextArea.AccessibleAWTTextArea, TextComponent.AccessibleAWTTextComponent, TextField.AccessibleAWTTextField, ToolTipManager, ToolTipManager.insideTimerAction, ToolTipManager.outsideTimerAction, ToolTipManager.stillInsideTimerAction, UndoManager, VetoableChangeListenerProxy, WindowAdapter

public interface EventListener
A tagging interface that all event listener interfaces must extend.
Since:
JDK1.1
OverviewPackageClassUseTreeDeprecatedIndexHelp Javaâ„¢ Platform
Standard Ed. 7 Prev ClassNext ClassFramesNo FramesAll ClassesSummary: Nested | Field | Constr | MethodDetail: Field | Constr | Method
Submit a bug or feature 
For further API reference and developer documentation, see Java SE Documentation. That documentation contains more detailed, developer-targeted descriptions, with conceptual overviews, definitions of terms, workarounds, and working code examples.
Copyright Â© 1993, 2014, Oracle and/or its affiliates. All rights reserved.